$(document).ready(function(){
	var minNum,maxNum,random_num,i,change_obj,num1,num2,step,obj1,obj2,intervalID,timeoutID; //инициализация переменных
	var num_array = new Array(); //массив для чисел, которые будут отсортированы

	//Генерация случайных чисел
	$('.randomGenerate').click(function(){
		$('.sorting').removeAttr('disabled').show(); //делаем кнопку "Отсортировать числа" активной
		$('#nums,#info span').html(''); //стираем сгенерированные числа и данные о состоянии сортировки
		$('#nums').css('backgroundImage', 'url(image/shelf.jpg)'); //задаем фон (полка) для блока с числами (шарами)
		
		clearTimeout(timeoutID); //отмена выполнения таймера
		clearInterval(intervalID); //отмена выполнения интервала
		
		//Генерация случайных чисел и заполнение исходной строки с числами, массива и блока с "Шарами" на полке
		for (i = 0; i < 10; i++) {
			minNum = -9999; //минимальное число 
			maxNum = 9999;  //максимальное число
			randomNum = Math.round((Math.random() * (maxNum - minNum) + minNum)); //случайное число от минимального до максимального
			$('#info .original_numbers').append(randomNum + ' '); //заполнение блока с исходными данными случайными числами
			num_array[i] = randomNum; //заполнение массива случайными числами
			$('#nums').append('<div class="num">' + randomNum + '</div>'); //генерация "шаров" с числами
		}
	});

	//Сортировка чисел
	$('.sorting').click(function(){
		$('#nums').css('backgroundImage', 'none'); //убираем фон под шарами-числами (полка)
		$('#info .cur_step').show(); //делаем видимым информацию о номере текущего прохода
		$(this).attr('disabled','disabled'); //делаем кнопку "Отсортировать числа" неактивной
		step = 1; //задаем начальное значение для внешнего цикла (количество проходов)

		//функция сортировки
		function sorting() {
			
			//проверяем количество выполненных проходов (шагов), чтобы остановить сортировку, когда выполнено 10 проходов 
			if( step < 11 ){
				$('#info .cur_step').text('Текущий проход: ' + step + '/10'); //выводим номер текущего прохода
				step++; //увеличиваем значение проходов
				i = 1; //задаем начальное значение для внутреннего цикла (для проходов по каждому из чисел)
				$('#info .result').text('Идет сортировка..'); //выводим информацию о том, что в данный момент числа сортируются
			
				//функция, которая будет выполняться с задержкой в 1 секунду
				(function() {
					if (i < 10) { //проверяем значение внутреннего цикла, чтобы обойти 10 пар чисел 
						if( num_array[i] < num_array[i-1] ){ //сравниваем текущее и предыдущее число массива
							num1 = i; //сохраняем индекс текущего элемента массива
							num2 = i-1; //сохраняем индекс предыдущего элемента массива
							obj1 = $('#nums .num:eq('+num1+')'); //производим выборку текущего числа(шара)
							obj2 = $('#nums .num:eq('+num2+')'); //производим выборку предыдущего числа(шара)	
							obj1.swap(obj2); //меняем (визуально) текущий шар (obj1) с предыдущим (obj2)
							
							//обмениваем числа в массиве
							change_obj = num_array[i];
							num_array[i] = num_array[i-1];
							num_array[i-1] = change_obj;
							
							timeoutID = setTimeout(arguments.callee, 1000); //выполняем функцию, которая выполняется в данный момент, задав таймер на 1 секунду, для задержки соответственно на 1 секунду
						}else{
							timeoutID = setTimeout(arguments.callee, 0); //выполняем функцию, которая выполняется в данный момент, задав таймер на 0, чтобы не было задержки, когда числа не нужно обменивать
						}
						i++;	
					}else{ //если на текущем проходе было проверено 10 пар чисел, то отменяем выполнение интервала, чтобы не было задержки между проходами
						clearInterval(intervalID); //отмена выполнения интервала
						sorting();  //запускаем функцию сортировки
						intervalID = setInterval(sorting, 10000); //запускаем выполнение функции sorting с интервалом в 10 секунду
					}
				})();
			}else{
				clearTimeout(timeoutID); //отмена выполнения таймера
				clearInterval(intervalID); //отмена выполнения интервала
				$('#info .result').text('Сортировка окончена!'); //оповещаем пользователя о том, что сортировка окончена
				$('#info .cur_step').hide(); //скрываем информацию о номере текущего прохода
			}
		}
		sorting(); //запускаем функцию сортировки
	});
});